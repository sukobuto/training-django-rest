{"version":3,"sources":["app.js","environment.js","main.js","services.js","resources/index.js","resources/value-converters/then.js","resources/dialogs.js","resources/dialogs/blocker.js","resources/dialogs/prompt.js","resources/dialogs/reply.js","resources/dialogs/upload.js","resources/dialogs/confirm.js","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/app.html","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/resources/dialogs/blocker.html","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/resources/dialogs/prompt.html","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/resources/dialogs/reply.html","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/resources/dialogs/upload.html","/Users/milabom01/PycharmProjects/training-django-rest/frontend/src/resources/dialogs/confirm.html","style.less","app.less"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {ApiClient} from \"services\";\nimport {Dialogs} from 'resources/dialogs';\nlet client = new ApiClient();\n\n@inject(Dialogs)\nexport class App {\n\n  todos = [];\n  new_todo;\n  active_todo = null;\n  loading = false;\n\n  /**\n   * @param {Dialogs} dialogs\n   */\n  constructor(dialogs) {\n    this.dialogs = dialogs;\n    this.message = 'Hello Django REST Framework!';\n  }\n\n  resetNewTodo() {\n    this.new_todo = {};\n  }\n\n  async activate() {\n    window.page = this;\n    this.resetNewTodo();\n    this.readTodos();\n  }\n\n  async readTodos() {\n    this.loading = true;\n    try {\n      this.todos = await client.get('todos/');\n    } catch (e) {\n      console.log(e);\n    }\n    this.loading = false;\n  }\n\n  async createTodo() {\n    try {\n      await client.post('todos/', this.new_todo);\n    } catch (e) {\n      console.log(e)\n    }\n    this.resetNewTodo();\n    await this.readTodos();\n  }\n\n  async deleteTodo(todo) {\n    let result = await this.dialogs.confirm(\"削除\", todo.text + \" を削除します。よろしいですか？\");\n    if (result.wasCancelled) return;\n    try {\n      await client.delete(`todos/${todo.id}/`);\n    } catch (e) {\n      console.log(e)\n    }\n    await this.readTodos();\n  }\n\n  openTodo(todo) {\n    if (this.active_todo == todo) {\n      this.active_todo = null;\n    } else {\n      this.active_todo = todo;\n    }\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import 'babel-polyfill';\n// import 'fetch';\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n// Promise.config({\n//   warnings: {\n//     wForgottenReturn: false\n//   }\n// });\n\n\nexport async function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-dialog', settings => {\n      settings.startingZIndex = 1111;\n    });\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  await aurelia.start();\n  aurelia.setRoot();\n}\n","import {HttpClient, json} from \"aurelia-fetch-client\";\n\nlet client = new HttpClient();\nclient.configure(config => {\n  config\n    .withBaseUrl('/api/')\n});\n\nexport class ApiClient {\n\n  async get(url) {\n    return await (await client.fetch(url)).json()\n  }\n\n  async post(url, content) {\n    await client.fetch(url, {\n      method: 'post',\n      body: json(content)\n    })\n  }\n\n  async put(url, content) {\n    await client.fetch(url, {\n      method: 'put',\n      body: json(content)\n    })\n  }\n\n  async save(url, content) {\n    if (content.id >= 1) {\n      this.put(url, content);\n    } else {\n      this.post(url, content);\n    }\n  }\n\n  async delete(url) {\n    await client.fetch(url, {\n      method: 'delete'\n    })\n  }\n\n}\n","export function configure(config) {\n  config.globalResources('./value-converters/then');\n}\n","export class ThenValueConverter {\n  toView(value, thenValue, elseValue = \"\") {\n    return value ? thenValue : elseValue;\n  }\n}\n\n","import {Confirm} from './dialogs/confirm'\nimport {Prompt} from './dialogs/prompt'\nimport {Reply} from './dialogs/reply'\nimport {Blocker} from './dialogs/blocker'\nimport {Upload} from './dialogs/upload'\nimport {DialogService} from 'aurelia-dialog'\n\nexport class Dialogs {\n\tstatic inject = [DialogService];\n\n\tconstructor(dialogService) {\n\t\tthis.dialogService = dialogService;\n\t}\n\n\topen(viewModel, model) {\n\t\treturn this.dialogService.open({viewModel, model});\n\t}\n\n\tconfirm(question, message) {\n\t  return this.dialogService.open({viewModel: Confirm, model: {question, message}})\n  }\n\n\tprompt(question) {\n\t\treturn this.dialogService.open({viewModel: Prompt, model: question});\n\t}\n\n\t/**\n\t * @param {ReplyModel} model\n\t * @returns {*|{error, options}|Window}\n\t */\n\treply(model) {\n\t\treturn this.dialogService.open({viewModel: Reply, model: model});\n\t}\n\n\tblock(message = '') {\n\t\tlet block = { message, blocking: true };\n\t\tsetTimeout(() => {\n\t\t\tthis.dialogService.open({viewModel: Blocker, model: block});\n\t\t}, 50);\n\t\treturn () => {\n\t\t\tif (block.closing) return;\n\t\t\tblock.closing = true;\n\t\t\tlet timer = setInterval(() => {\n\t\t\t\tif (block.controller) {\n\t\t\t\t\tblock.controller.close();\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t}\n\t\t\t}, 400);\n\t\t}\n\t}\n\n\t/**\n\t * @param {UploadModel} model\n\t * @returns {*|{error, options}|Window}\n\t */\n\tupload(model) {\n\t\treturn this.dialogService.open({viewModel: Upload, model: model});\n\t}\n\n}\n\nexport class ReplyModel {\n\n\ttitle = '返信';\n\tdescription = '';\n\tcontent = null;\n\tbodyLabel = null;\n\tbody = '';\n\tactionLabel = null;\n\taction = null;\n\n}\n\nexport class UploadModel {\n\t\n\ttitle = 'アップロード';\n\tdescription = '';\n\tname = 'file';\n\tactionLabel = 'アップロード';\n\tcancelLabel = 'キャンセル';\n\taction = null;\n\n}\n","import {inject} from 'aurelia-framework'\nimport {DialogController} from 'aurelia-dialog'\n\n@inject(DialogController)\nexport class Blocker {\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t}\n\n\tactivate(block) {\n\t\tthis.block = block;\n\t\tblock.controller = this.controller;\n\t}\n\n}","import {DialogController} from 'aurelia-dialog'\n\nexport class Prompt {\n\tstatic inject = [DialogController];\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t\tthis.answer = null;\n\n\t\tcontroller.settings.lock = false;\n\t}\n\n\tactivate(question) {\n\t\tthis.question = question;\n\t}\n}","import {inject} from 'aurelia-framework'\nimport {DialogController} from 'aurelia-dialog'\n\n@inject(DialogController)\nexport class Reply {\n\n\texecuting = false;\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t}\n\n\tactivate(model) {\n\t\tthis.model = model;\n\t\tthis.action = model.action;\n\t}\n\n\tasync execute() {\n\t\tif (this.action) {\n\t\t\tthis.executing = true;\n\t\t\tlet result = await this.action(this.model);\n\t\t\tthis.executing = false;\n\t\t\tif (result !== false) this.controller.ok(result);\n\t\t} else {\n\t\t\tthis.controller.ok(this.model);\n\t\t}\n\t}\n\n}","import {inject} from 'aurelia-framework';\nimport {DialogController} from 'aurelia-dialog';\n\n@inject(DialogController)\nexport class Upload {\n\n\tuploading = false;\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\t}\n\n\tactivate(model) {\n\t\tthis.model = model;\n\t\tthis.action = model.action;\n\t}\n\n\tasync upload() {\n\t\tthis.model.notSelected = !this.model.file.value;\n\t\tif (!this.model.notSelected) {\n\t\t\tthis.uploading = true;\n\t\t\tlet result = await this.action(this.model);\n\t\t\tthis.uploading = false;\n\t\t\tif (result !== false) {\n\t\t\t\tthis.controller.ok(result);\n\t\t\t}\n\t\t}\n\t}\n\n}","import {DialogController} from 'aurelia-dialog'\n\nexport class Confirm {\n\tstatic inject = [DialogController];\n\n\tconstructor(controller) {\n\t\tthis.controller = controller;\n\n\t\tcontroller.settings.lock = false;\n\t}\n\n\tactivate(model) {\n\t\tthis.model = model;\n\t}\n}\n",null,null,null,null,null,null,"ai-dialog-overlay {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n","ai-dialog-overlay {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n"],"sourceRoot":"../../frontend/src"}